 import java.util.Stack;

 public class Solution {
     Stack<Integer> stack1 = new Stack<Integer>();
     Stack<Integer> stack2 = new Stack<Integer>();
     public void push(int node){
         stack1.push(node);
     }
     public int pop(){
         if(stack2.size() <= 0){            //防止pop完之前再压入数据时
             while (stack1.isEmpty()){
                 stack2.push(stack1.pop());
             }
         }
          int head = stack2.pop();
         return head;
     }

     public static void main(String[] args) {
         Solution solution = new Solution();
         solution.push(1);
         solution.push(2);
         solution.push(3);
         solution.push(4);
         System.out.println(solution.pop());
         System.out.println(solution.pop());
         System.out.println(solution.pop());
         System.out.println(solution.pop());
     }

 }
